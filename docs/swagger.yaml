basePath: /
definitions:
  api-your-accounts_budget_infrastructure_model.ReadResponse:
    properties:
      additional_income:
        type: number
      estimated_balance:
        type: number
      fixed_income:
        type: number
      id:
        type: integer
      month:
        type: integer
      name:
        type: string
      project_id:
        type: integer
      total:
        type: number
      total_balance:
        type: number
      year:
        type: integer
    type: object
  api-your-accounts_project_infrastructure_model.CreateRequest:
    properties:
      cloneId:
        minimum: 1
        type: integer
      name:
        maxLength: 40
        type: string
      type:
        allOf:
        - $ref: '#/definitions/domain.ProjectType'
        enum:
        - budget
      userId:
        minimum: 1
        type: integer
    type: object
  api-your-accounts_project_infrastructure_model.CreateResponse:
    properties:
      id:
        type: integer
    type: object
  api-your-accounts_project_infrastructure_model.ReadResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      type:
        $ref: '#/definitions/domain.ProjectType'
    type: object
  api-your-accounts_user_infrastructure_model.CreateRequest:
    properties:
      email:
        type: string
      uuid:
        type: string
    required:
    - email
    - uuid
    type: object
  api-your-accounts_user_infrastructure_model.CreateResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
      uuid:
        type: string
    type: object
  domain.ProjectType:
    enum:
    - budget
    type: string
    x-enum-varnames:
    - Budget
  model.AuthRequest:
    properties:
      email:
        type: string
      uuid:
        type: string
    required:
    - email
    - uuid
    type: object
  model.AuthResponse:
    properties:
      token:
        type: string
    type: object
  model.ReadLogsResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  model.RefreshTokenRequest:
    properties:
      email:
        type: string
      token:
        type: string
      uuid:
        type: string
    required:
    - email
    - token
    - uuid
    type: object
  model.RefreshTokenResponse:
    properties:
      token:
        type: string
    type: object
info:
  contact:
    email: jonathancastaneda@jsc-developer.me
    name: Your Accounts Support
  description: This is the API from project Your Accounts
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Your Accounts API
  version: "1.0"
paths:
  /:
    get:
      description: get the status of server
      produces:
      - text/plain
      responses:
        "200":
          description: Status available
          schema:
            type: string
        "500":
          description: Internal Server Error
      summary: Show the status of server
      tags:
      - main
  /api/v1/budget/{id}:
    get:
      description: read budget by ID
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api-your-accounts_budget_infrastructure_model.ReadResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Read budget by ID
      tags:
      - budget
  /api/v1/project/:
    post:
      consumes:
      - application/json
      description: create a new project
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api-your-accounts_project_infrastructure_model.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api-your-accounts_project_infrastructure_model.CreateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create project
      tags:
      - project
  /api/v1/project/{id}:
    delete:
      description: Delete an project by ID
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete project
      tags:
      - project
  /api/v1/project/{user}:
    get:
      description: read projects associated to an user
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api-your-accounts_project_infrastructure_model.ReadResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Read projects by user
      tags:
      - project
  /api/v1/project/logs/{id}:
    get:
      description: read logs associated to a project
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ReadLogsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Read logs by project
      tags:
      - project
  /user:
    post:
      consumes:
      - application/json
      description: Create user in the system
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api-your-accounts_user_infrastructure_model.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api-your-accounts_user_infrastructure_model.CreateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create user
      tags:
      - user
  /user/auth:
    post:
      consumes:
      - application/json
      description: create token for access
      parameters:
      - description: Authentication data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Authenticate user
      tags:
      - user
  /user/refresh-token:
    put:
      consumes:
      - application/json
      description: refresh token for access
      parameters:
      - description: Refresh token data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Refresh token of user
      tags:
      - user
swagger: "2.0"
