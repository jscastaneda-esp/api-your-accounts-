// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// IBudgetAvailableApp is an autogenerated mock type for the IBudgetAvailableApp type
type IBudgetAvailableApp struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, name, budgetId
func (_m *IBudgetAvailableApp) Create(ctx context.Context, name string, budgetId uint) (uint, error) {
	ret := _m.Called(ctx, name, budgetId)

	var r0 uint
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, uint) (uint, error)); ok {
		return rf(ctx, name, budgetId)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, uint) uint); ok {
		r0 = rf(ctx, name, budgetId)
	} else {
		r0 = ret.Get(0).(uint)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, uint) error); ok {
		r1 = rf(ctx, name, budgetId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIBudgetAvailableApp interface {
	mock.TestingT
	Cleanup(func())
}

// NewIBudgetAvailableApp creates a new instance of IBudgetAvailableApp. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIBudgetAvailableApp(t mockConstructorTestingTNewIBudgetAvailableApp) *IBudgetAvailableApp {
	mock := &IBudgetAvailableApp{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
