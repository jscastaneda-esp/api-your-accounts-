// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks_application

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockIBudgetAvailableApp is an autogenerated mock type for the IBudgetAvailableApp type
type MockIBudgetAvailableApp struct {
	mock.Mock
}

type MockIBudgetAvailableApp_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIBudgetAvailableApp) EXPECT() *MockIBudgetAvailableApp_Expecter {
	return &MockIBudgetAvailableApp_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: ctx, name, budgetId
func (_m *MockIBudgetAvailableApp) Create(ctx context.Context, name string, budgetId uint) (uint, error) {
	ret := _m.Called(ctx, name, budgetId)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 uint
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, uint) (uint, error)); ok {
		return rf(ctx, name, budgetId)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, uint) uint); ok {
		r0 = rf(ctx, name, budgetId)
	} else {
		r0 = ret.Get(0).(uint)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, uint) error); ok {
		r1 = rf(ctx, name, budgetId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIBudgetAvailableApp_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockIBudgetAvailableApp_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - ctx context.Context
//   - name string
//   - budgetId uint
func (_e *MockIBudgetAvailableApp_Expecter) Create(ctx interface{}, name interface{}, budgetId interface{}) *MockIBudgetAvailableApp_Create_Call {
	return &MockIBudgetAvailableApp_Create_Call{Call: _e.mock.On("Create", ctx, name, budgetId)}
}

func (_c *MockIBudgetAvailableApp_Create_Call) Run(run func(ctx context.Context, name string, budgetId uint)) *MockIBudgetAvailableApp_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(uint))
	})
	return _c
}

func (_c *MockIBudgetAvailableApp_Create_Call) Return(_a0 uint, _a1 error) *MockIBudgetAvailableApp_Create_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIBudgetAvailableApp_Create_Call) RunAndReturn(run func(context.Context, string, uint) (uint, error)) *MockIBudgetAvailableApp_Create_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIBudgetAvailableApp creates a new instance of MockIBudgetAvailableApp. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIBudgetAvailableApp(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIBudgetAvailableApp {
	mock := &MockIBudgetAvailableApp{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
